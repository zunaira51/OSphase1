import socket
import sys
from thread import *

HOST = ''
PORT = 8101
arr=[]
arr1=[]
arr2=[]
i=0
k=0
l=0
chat=0
chat1=0
new=''
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print 'Socket created'


try:
    s.bind((HOST, PORT))
except socket.error as msg:
    print 'Bind failed. Error Code : ' + str(msg[0]) + ' Message ' + msg[1]
    sys.exit()

print 'Socket bind complete'


s.listen(10)
print 'Socket now listening'
# Function for handling connections. This will be used to create threads

def clientthread(conn):
    # Sending message to connected client
   # conn.sendall(str(arr[1]))
    global j,k
    j=0
    k=0
    while j !=i-1:
   	 conn.sendall(arr1[j])
   	 j=j+1
    while k !=i:
	arr[k].sendall(new)
	k=k+1
    chat=conn.recv(1024)
    while True:
        # Receiving from client
        data = conn.recv(1024)
        reply =  data
        if not data:
            break

        if conn == arr[0]:
		print(chat+ 'is aaa')
	 #   chat.sendall(chat) 
		if chat==arr2[1]:
		    print (arr2[1]+'sent msg to'+arr2[0])
		    arr[1].sendall(reply)
		elif chat==arr2[2]: 
		    print (arr2[2]+'sent msg to'+arr2[0])

		    arr[2].sendall(reply)	
	elif conn==arr[1]:
		print(chat+ 'is bbb ')
		if chat==arr2[0]:
		    print (arr2[0]+'sent msg to'+arr2[1])    
                    arr[0].sendall(reply)
        	elif chat==arr2[2]:
		    print (arr2[2]+'sent msg to'+arr2[1])
                    arr[2].sendall(reply)
	elif conn==arr[2]:
		print(chat+ 'is cccc \n' )
		print(arr[0])
                if chat==arr2[0]:
		    print (arr2[0]+'sent msg to'+arr2[1])
                    arr[0].sendall(reply)
                elif chat==arr2[1]:
		    print (arr2[0]+'sent msg to'+arr2[1])
                    arr[1].sendall(reply)
	else: 
		print ((conn)+'not matched')
	 #   arr[0].sendall(addr[0])
 #       else:
	  #  arr[0].sendall(arr[0])	
#	    arr[0].sendall(reply)
          #  arr[0].sendall(addr[0])

       
    # came out of loop
    conn.close()
j=0
arr1=[]
# now keep talking with the client
while 1:
    # wait to accept a connection - blocking call
    conn, addr = s.accept()
    arr.append(conn)
    print 'Connected with ' + addr[0] + ':' + str(addr[1])
    # start new thread takes 1st argument as a function name to be run, second is the tuple of arguments to the function.
    arr2.append(str(addr[1]))
    arr1.append(addr[0] + ': ' + str(addr[1])+ '\n')
    chat1=str(addr[1])
    new=addr[0] + ': ' + str(addr[1])+ '\n'
    start_new_thread(clientthread, (conn,))
    i+=1

s.close()

