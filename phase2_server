import socket
import sys
from thread import *

HOST = ''
PORT = 8102
arr=[]
arr1=[]
arr2=[]
arr3=[]
arr4=[]
i=0
k=0
l=0
chat=0
chat1=0
new=''
new1=''
arr3=['Asma','Sam','Usman','Zunaira','Annie','Yasir','Sana']
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print 'Socket created'


try:
    s.bind((HOST, PORT))
except socket.error as msg:
    print 'Bind failed. Error Code : ' + str(msg[0]) + ' Message ' + msg[1]
    sys.exit()

print 'Socket bind complete'


s.listen(10)
print 'Socket now listening'
# Function for handling connections. This will be used to create threads

def clientthread(conn):
    # Sending message to connected client
    global j,k
    j=0
    k=0
    while j !=i-1:
   	 conn.sendall(arr4[j])
   	 j=j+1
    while k !=i:
	arr[k].sendall(new1)
	k=k+1
    chat=conn.recv(1024)
    while True:
        # Receiving from client
        data = conn.recv(1024)
        reply =  data
        if not data:
            break
	for l in range(i):
         if conn == arr[l]:
         	for m in range(i):
	 	 if l==m:
           	  continue 
	         if chat==arr4[m]:
	          arr[m].sendall(reply)
	        m=m+1
	l=l+1
    # came out of loop
    conn.close()
# now keep talking with the client
while 1:
    # wait to accept a connection - blocking call
    conn, addr = s.accept()
    arr.append(conn)
    print 'Connected with ' + addr[0] + ':' + str(addr[1])
    # start new thread takes 1st argument as a function name to be run, second is the tuple of arguments to the function.
    arr2.append(str(addr[1]))
    arr4.append(arr3[i])
    arr1.append(addr[0] + ': ' + str(addr[1])+ '\n')
    chat1=str(addr[1])
    new1=arr4[i]
    new=addr[0] + ': ' + str(addr[1])+ '\n'
    start_new_thread(clientthread, (conn,))
    print 'Connected with ' +arr4[i]
    i+=1
s.close()

